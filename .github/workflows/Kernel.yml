name: Make Rpi64 Kernel CI

on:
  push:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 1
    - name: Get toolchain
      run: wget "https://developer.arm.com/-/media/Files/downloads/gnu-a/8.3-2019.03/binrel/gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu.tar.xz?revision=2e88a73f-d233-4f96-b1f4-d8b36e9bb0b9&la=en&hash=167687FADA00B73D20EED2A67D0939A197504ACD" -O ~/gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu.tar.xz
    - name: unzip gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu.tar.xz
      run: tar -Jxvf ~/gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu.tar.xz -C ~/
    - name: build kernel
      run: export PATH="/home/runner/gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu/bin":${PATH};echo ${PATH} > log.txt; ls -alh ~/gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu >> log.txt; ls -alh /home/runner >> log.txt
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./log.txt
        asset_name: log.txt
        asset_content_type: application/gzip
